buildscript {
	repositories {
		jcenter()
		maven {
			url "https://maven.google.com"
		}
		google()
	}

	dependencies {
		classpath 'com.android.tools.build:gradle:3.6.2'
	}
}

def properties = getProps()

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
	compileSdkVersion 29

	defaultConfig {
		minSdkVersion 21
		targetSdkVersion 29

		testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
	}

	sourceSets {
		main.java.srcDirs += "src/main/kotlin"
	}
}

repositories {
	jcenter()
}

dependencies {
	implementation fileTree(include: ['*.jar'], dir: 'libs')
	implementation 'androidx.annotation:annotation:1.1.0'
	implementation 'androidx.cardview:cardview:1.0.0'
	implementation 'com.google.android.material:material:1.2.0-alpha05'
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

/*========================*
 * Maven Plugin Packaging *
 *========================*/

apply plugin: 'maven'

def localReleaseDest = "${buildDir}/release/${properties['version_name']}"

task androidJavadocs(type: Javadoc) {
	failOnError = false
	source = android.sourceSets.main.java.srcDirs
	ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
	classpath += files(ext.androidJar)
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
	classifier = 'javadoc'
	from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
	classifier = 'sources'
	from android.sourceSets.main.java.srcDirs
}

uploadArchives {
	repositories.mavenDeployer {
		pom.groupId = 'uk.co.markormesher'
		pom.artifactId = 'android-fab'
		pom.version = properties['version_name']
		repository(url: "file://${localReleaseDest}")
	}
}

task zipRelease(type: Zip) {
	from localReleaseDest
	destinationDir buildDir
	archiveName "release-${properties['version_name']}.zip"
}

task generateRelease(dependsOn: [uploadArchives, zipRelease]) {
	doLast {
		println "Release ${properties['version_name']} can be found at ${localReleaseDest}/"
		println "Release ${properties['version_name']} zipped can be found ${buildDir}/release-${properties['version_name']}.zip"
	}
}

artifacts {
	archives androidSourcesJar
	archives androidJavadocsJar
}
